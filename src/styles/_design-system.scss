// Design System Variables
// ======================

// Color Palette
// -------------
$colors: (
  // Primary Colors
  primary-50: #e8f2ff,
  primary-100: #c5deff,
  primary-200: #9cc8ff,
  primary-300: #6fb1ff,
  primary-400: #59b1f0,
  primary-500: #3b82f6,
  primary-600: #2563eb,
  primary-700: #1d4ed8,
  primary-800: #1e40af,
  primary-900: #1e3a8a,

  // Secondary Colors
  secondary-50: #f8fafc,
  secondary-100: #f1f5f9,
  secondary-200: #e2e8f0,
  secondary-300: #cbd5e1,
  secondary-400: #94a3b8,
  secondary-500: #64748b,
  secondary-600: #475569,
  secondary-700: #334155,
  secondary-800: #1e293b,
  secondary-900: #0f172a,

  // Neutral Colors
  neutral-50: #fafafa,
  neutral-100: #f5f5f5,
  neutral-200: #e5e5e5,
  neutral-300: #d4d4d4,
  neutral-400: #a3a3a3,
  neutral-500: #737373,
  neutral-600: #525252,
  neutral-700: #404040,
  neutral-800: #262626,
  neutral-900: #171717,

  // Semantic Colors
  success-50: #f0fdf4,
  success-100: #dcfce7,
  success-200: #bbf7d0,
  success-500: #22c55e,
  success-600: #16a34a,
  success-700: #15803d,

  warning-50: #fffbeb,
  warning-100: #fef3c7,
  warning-200: #fde68a,
  warning-500: #f59e0b,
  warning-600: #d97706,
  warning-700: #b45309,

  error-50: #fef2f2,
  error-100: #fee2e2,
  error-200: #fecaca,
  error-500: #ef4444,
  error-600: #dc2626,
  error-700: #b91c1c,

  // Text Colors
  text-primary: #1f2937,
  text-secondary: #6b7280,
  text-tertiary: #9ca3af,
  text-inverse: #ffffff,

  // Background Colors
  bg-primary: #ffffff,
  bg-secondary: #f9fafb,
  bg-tertiary: #f3f4f6,
  bg-dark: #1f2937,
);

// Color Helper Function
@function color($name) {
  @return map-get($colors, $name);
}

// Typography
// ----------
$font-families: (
  primary: ('Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif),
  secondary: ('Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif),
  mono: ('JetBrains Mono', 'Fira Code', Consolas, monospace),
);

$font-sizes: (
  xs: 0.75rem,    // 12px
  sm: 0.875rem,   // 14px
  base: 1rem,     // 16px
  lg: 1.125rem,   // 18px
  xl: 1.25rem,    // 20px
  2xl: 1.5rem,    // 24px
  3xl: 1.875rem,  // 30px
  4xl: 2.25rem,   // 36px
  5xl: 3rem,      // 48px
);

$font-weights: (
  light: 300,
  normal: 400,
  medium: 500,
  semibold: 600,
  bold: 700,
);

$line-heights: (
  tight: 1.25,
  normal: 1.5,
  relaxed: 1.75,
);

// Spacing Scale
// -------------
$spacing: (
  0: 0,
  1: 0.25rem,   // 4px
  2: 0.5rem,    // 8px
  3: 0.75rem,   // 12px
  4: 1rem,      // 16px
  5: 1.25rem,   // 20px
  6: 1.5rem,    // 24px
  8: 2rem,      // 32px
  10: 2.5rem,   // 40px
  12: 3rem,     // 48px
  16: 4rem,     // 64px
  20: 5rem,     // 80px
  24: 6rem,     // 96px
);

// Border Radius
// -------------
$border-radius: (
  none: 0,
  sm: 0.25rem,   // 4px
  base: 0.5rem,  // 8px
  md: 0.75rem,   // 12px
  lg: 1rem,      // 16px
  xl: 1.5rem,    // 24px
  2xl: 2rem,     // 32px
  full: 9999px,
);

// Shadows
// -------
$shadows: (
  sm: "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
  base: "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",
  md: "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
  lg: "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
  xl: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)",
  2xl: "0 25px 50px -12px rgba(0, 0, 0, 0.25)",
);

// Breakpoints
// -----------
$breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  2xl: 1400px,
);

// Helper Functions
// ----------------
@function spacing($size) {
  @return map-get($spacing, $size);
}

@function font-size($size) {
  @return map-get($font-sizes, $size);
}

@function font-weight($weight) {
  @return map-get($font-weights, $weight);
}

@function line-height($height) {
  @return map-get($line-heights, $height);
}

@function border-radius($size) {
  @return map-get($border-radius, $size);
}

@function shadow($size) {
  @return map-get($shadows, $size);
}

// Responsive Mixins
// -----------------
@mixin respond-to($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);
  @if $value {
    @media (min-width: $value) {
      @content;
    }
  }
}